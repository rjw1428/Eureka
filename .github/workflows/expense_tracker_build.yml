name: Expense Tracker Build Pipeline

on:
    push:
        branches:
            - main
    # pull_request:
    #     types: [closed]
    #     branches: [main]
    #     paths:
    #         - "flutter/expense_tracker/**"
    #     # # Alternatively, you can use the PR title pattern
    #     # if: contains(github.event.pull_request.title, '[ExpenseTracker]')

env:
    FLUTTER_VERSION: "3.29.3" # Adjust to your Flutter version

jobs:
    build_ios:
        name: Build iOS App
        runs-on: macos-15
        # if: github.event.pull_request.merged == true

        steps:
            - uses: actions/checkout@v4

            - name: Install Apple Certificate
              env:
                BUILD_CERTIFICATE_BASE64: ${{ secrets.IOS_P12_CERTIFICATE }}
                P12_PASSWORD: ${{ secrets.IOS_P12_PASSWORD }}
                KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD || 'temporary_password' }}
              run: |
                # Create variables
                CERTIFICATE_PATH=$RUNNER_TEMP/certificate.p12
                KEYCHAIN_PATH=$RUNNER_TEMP/build.keychain

                # Import certificate from secrets
                echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

                # Create temporary keychain
                security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
                security set-keychain-settings -lut 3600 $KEYCHAIN_PATH
                security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

                # Import certificate to keychain
                security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
                security list-keychain -d user -s $KEYCHAIN_PATH


                # # Import certificate to keychain
                # security import certificate.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
                # security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain

                # Clean up certificate file
                rm -f $CERTIFICATE_PATH

            - name: Install Provisioning Profile
              env:
                PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE }}
              run: |

                # Create variables
                PROFILE_PATH=$RUNNER_TEMP/profile.mobileprovision

                # Import profile from secrets
                echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode -o $PROFILE_PATH

                # Create directory if it doesn't exist
                mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles

                # Copy provisioning profile to directory
                cp $PROFILE_PATH ~/Library/MobileDevice/Provisioning\ Profiles/
                
                # Clean up file
                rm -f $PROFILE_PATH
                
                echo "Installed provisioning profile"

            - name: Setup Flutter
              uses: subosito/flutter-action@v2
              with:
                  flutter-version: ${{ env.FLUTTER_VERSION }}
                  channel: "stable"
                  cache: true

            - name: Install Flutter dependencies
              working-directory: ./flutter/expense_tracker
              run: flutter pub get

            - name: Build iOS
              working-directory: ./flutter/expense_tracker
              run: |
                # Build IPA
                flutter build ipa --release --export-options-plist=ios/CloudExportOptions.plist

            - name: Upload iOS Build
              uses: actions/upload-artifact@v4
              with:
                  name: expense_tracker_ios
                  path: ./flutter/expense_tracker/build/ios/ipa/expense_tracker.ipa

            - name: 'Upload app to TestFlight'
              uses: apple-actions/upload-testflight-build@v1
              with: 
                app-path: ./flutter/expense_tracker/build/ios/ipa/expense_tracker.ipa
                issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
                api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
                api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}

    build_android:
        name: Build Android App
        runs-on: ubuntu-latest
        # if: github.event.pull_request.merged == true

        steps:
            - uses: actions/checkout@v3

            - name: Setup Flutter
              uses: subosito/flutter-action@v2
              with:
                flutter-version: ${{ env.FLUTTER_VERSION }}
                channel: "stable"

            - name: Flutter Pub Get
              working-directory: ./flutter/expense_tracker # Adjust this path
              run: flutter pub get

            - name: Decode Keystore File
              working-directory: ./flutter/expense_tracker # Adjust this path
              env:
                KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
              run: |
                echo $KEYSTORE_BASE64 | base64 -d > android/app/keystore.jks

            - name: Update key.properties
              working-directory: ./flutter/expense_tracker # Adjust this path
              run: |
                echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" > android/key.properties
                echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
                echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
                echo "storeFile=keystore.jks" >> android/key.properties
            
            - name: Add google-services File
              working-directory: ./flutter/expense_tracker # Adjust this path
              run: |
                echo "${{ secrets.EXPENSE_TRACKER_GOOGLE_SERVICES_JSON }}" | base64 -di > android/app/google-services.json

            - name: Build Android
              working-directory: ./flutter/expense_tracker # Adjust this path
              env:
                  KEY_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
                  KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
                  KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
              run: flutter build appbundle

            - name: Upload Android Build
              uses: actions/upload-artifact@v4
              with:
                  name: expense_tracker_android
                  path: ./flutter/expense_tracker/build/app/outputs/bundle/release/app-release.aab # Adjust this path
